# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401


class MonoLiagndTransition:
    time: float
    state: MonoLigandState

class MonoLigand:
    r"""
    A particle that can attach to a receptor.
    
    This particle is a simple model of a ligand that can attach to a receptor. It has a binding
    strength that determines how likely it is to attach to a receptor, and a receptor density that
    determines how many receptors are available to attach to.
    """
    def __new__(cls,receptor_density:float, binding_strength:float, on_rate:float, off_rate:float): ...
    def simulate(self) -> MonoLigandSimulationSingle:
        ...

    def simulate_many(self, n:int) -> MonoLigandSimulation:
        ...


class MonoLigandSimulation:
    def __new__(cls,particle:MonoLigand, n:int): ...
    def sample(self, samples:int) -> list[list[MonoLigandState]]:
        ...

    def thetas(self, samples:int) -> list[float]:
        ...

    def advance_until(self, t:float) -> None:
        ...


class MonoLigandSimulationSingle:
    transition_history: list[MonoLiagndTransition]
    def __new__(cls,particle:MonoLigand): ...
    def advance_until(self, t:float) -> None:
        ...


class MonoLigandState:
    is_attached: bool
    def toggle(self) -> MonoLigandState:
        ...


class MultiLigand:
    ...

